version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      target: dev
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/frontend/app
      - /frontend/app/node_modules
      - /frontend/app/.next
    ports:
      - "3000:3000"
  backend:
    container_name: backend
    build:
      context: ./backend/
      # target: dev
      dockerfile: Dockerfile
    volumes:
      - ./backend/app:/app/app # Mount the app directory
    environment:
      PORT: 8000
    ports:
      - "8000:8000"
    restart: always
  database:
    container_name: database
    image: postgres:latest
    restart: always
    shm_size: 125mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    expose:
      - 5432
    volumes:
      - ./db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@postgres.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    restart: always
  proxy:
    container_name: proxy
    image: nginx:latest
    volumes:
      - type: bind
        source: ./proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
      - database
      - pgadmin
